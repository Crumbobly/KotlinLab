{# @pebvariable name="model" type="ru.lab1.web.models.loginRegistration.RegistrationPageVM" #}

{% extends "../layouts/layout.peb" %}

{% block title %} Регистрация {% endblock %}

{% block link4 %}active{% endblock %}

{% block content %}
<h2 class="mb-4">Регистрация</h2>

<div>
    <form method="post">

        <div class="form-group mb-2">
            <label for="username">Имя пользователя:</label>
            <input type="text" class="form-control {{ getIsError(model.nameError) }}" maxlength="50" id="username" name="username" value="{{ model.name }}"
                   placeholder="Введите имя пользователя" aria-describedby="validationName" required>
            <div id="validationName" class="invalid-feedback">
                {{ model.nameError }}
            </div>
        </div>

        <div class="form-group mb-2">
            <label for="password">Пароль:</label>
            <input type="password" class="form-control {{ getIsError(model.passwordError) }}" maxlength="200" id="password" name="password" value="{{ model.password }}"
                   placeholder="Введите пароль" aria-describedby="validationPassword" required>
            <div id="validationPassword" class="invalid-feedback">
                {{ model.passwordError }}
            </div>
        </div>

        <div class="form-group mb-4" id="divWithConfirmPassword">
            <label for="confirmPassword">Подтвердите пароль:</label>
            <input type="password" class="form-control {{ getIsError(model.passwordError) }}" id="confirmPassword" name="confirmPassword"
                   placeholder="Введите пароль" autocomplete="off" aria-describedby="validationConfirmPassword" required>
            <div id="validationConfirmPassword" class="invalid-feedback">
                    {{ model.passwordError }}
            </div>
        </div>

        <button type="submit" class="btn btn-dark">Регистрация</button>
        <a class="btn btn-outline-dark" type="button" href="/login">У меня уже есть аккаунт</a>

    </form>
</div>

{% endblock %}

{% macro getIsError(arg) %}
    {% if arg is not null %}
        is-invalid
    {% endif %}
{% endmacro %}
